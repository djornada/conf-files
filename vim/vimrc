call plug#begin()

	Plug 'ctrlpvim/ctrlp.vim'
	Plug 'digitaltoad/vim-pug', {'for': 'jade'}
	Plug 'editorconfig/editorconfig-vim'
	Plug 'honza/vim-snippets'
	Plug 'justinmk/vim-syntax-extra', {'for': 'c'}
	Plug 'keith/rspec.vim', {'for': 'ruby'}
	Plug 'mileszs/ack.vim'
	Plug 'othree/yajs.vim', {'for': 'javascript'}
	Plug 'raimondi/delimitmate'
	Plug 'scrooloose/nerdcommenter'
	Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'}
	Plug 'scrooloose/syntastic'
	Plug 'tpope/vim-haml', {'for': 'haml'}
	Plug 'tpope/vim-markdown', {'for': 'markdown'}
	Plug 'tpope/vim-rails', {'for': 'ruby'}
	Plug 'tpope/vim-repeat'
	Plug 'tpope/vim-surround'
	Plug 'vim-airline/vim-airline'
	Plug 'vim-airline/vim-airline-themes'
	Plug 'chriskempson/base16-vim'
	Plug 'shougo/neocomplete'
	Plug 'shougo/neosnippet'

call plug#end()

let base16colorspace=256
colo base16-spacemacs

autocmd BufNewFile,BufReadPost *.md set filetype=markdown
autocmd BufNewFile,BufReadPost *.tex set filetype=tex

let g:syntastic_auto_loc_list = 1
let g:syntastic_enable_signs = 1
let g:syntastic_quiet_messages = {'level': 'warnings'}
let g:syntastic_check_on_open = 1

let g:acp_enableAtStartup = 0
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1

let g:neocomplete#sources#syntax#min_keyword_length = 3
let g:neocomplete#lock_buffer_name_pattern = '\*ku\*'

let g:neosnippet#disable_runtime_snippet = 1
let g:neosnippet#snippets_directory='~/.vim/plugged/vim-snippets/snippets'

let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

let mapleader = ','

map <leader>n :NERDTreeToggle<CR>
map <leader>q :q<cr>
map <leader>w :w!<cr>
map <space> /

xmap <TAB>     <Plug>(neosnippet_expand_or_jump)
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"


map <C-c> <CR><Esc>O

set ai
set shiftwidth=4
set laststatus=2
set list
set listchars=trail:·,eol:↲,tab:»\ 
set tabstop=4
set shiftround
set nosmartindent
set noexpandtab

set ignorecase
set incsearch
set magic
set number
set ruler
set smartcase
set splitbelow
set splitright
set wildignore=*.o,*.obj,*~
set wildmenu
set ls=2

if has('conceal')
  set conceallevel=2 concealcursor=niv
endif

syntax on

"gvim stuff
set guioptions-=m "remove menu bar
set guioptions-=T "remove tool bar
set guioptions-=r "remove right hand scroll bar
set guioptions-=L "remove left hand scroll bar
